diff --git a/ckan/controllers/user.py b/ckan/controllers/user.py
index 4f30bb4..7f95a66 100644
--- a/ckan/controllers/user.py
+++ b/ckan/controllers/user.py
@@ -166,9 +166,8 @@ class UserController(base.BaseController):
         if context['save'] and not data:
             return self._save_new(context)
 
-        if c.user and not data:
-            # #1799 Don't offer the registration form if already logged in
-            return render('user/logout_first.html')
+        if not new_authz.is_sysadmin(c.user):
+            abort(401, _('Unauthorized to create a user'))
 
         data = data or {}
         errors = errors or {}
diff --git a/ckan/lib/dictization/model_dictize.py b/ckan/lib/dictization/model_dictize.py
index 59f9bc9..408614b 100644
--- a/ckan/lib/dictization/model_dictize.py
+++ b/ckan/lib/dictization/model_dictize.py
@@ -595,6 +595,19 @@ def package_to_api(pkg, context):
     dictized['ratings_count'] = len(pkg.ratings)
     dictized['notes_rendered'] = h.render_markdown(pkg.notes)
 
+    # SF: esto es para agregar las aplicaciones al json //FIXME: hacer bien
+    model = context['model']
+    relateds = model.Related.get_for_dataset(pkg, status='active')
+    related_items = []
+    for r in relateds:
+        related = r.related
+        related_items.append({'id': related.id, 'type': related.type,
+            'created': related.created.strftime('%Y-%m-%dT%H:%M:%S.%f'),
+            'title': related.title, 'url': related.url,
+            'image_url': related.image_url, 'description': related.description})
+    dictized['related'] = related_items
+    # SF fin
+
     site_url = config.get('ckan.site_url', None)
     if site_url:
         dictized['ckan_url'] = '%s/dataset/%s' % (site_url, pkg.name)
diff --git a/ckan/logic/validators.py b/ckan/logic/validators.py
index 1d57478..aae4a09 100644
--- a/ckan/logic/validators.py
+++ b/ckan/logic/validators.py
@@ -665,7 +665,7 @@ def url_validator(key, data, errors, context):
 
     pieces = urlparse.urlparse(url)
     if all([pieces.scheme, pieces.netloc]) and \
-       set(pieces.netloc) <= set(string.letters + string.digits + '-.') and \
+       set(pieces.netloc) <= set(string.letters + string.digits + '-.:') and \
        pieces.scheme in ['http', 'https']:
        return
 
